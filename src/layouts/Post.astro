---
import BaseLayout from "./Base.astro";

const notes = {
    "info": {
        "text": "Info",
        "icon": `<i class="fa-solid fa-circle-info"></i>`
    },
    "warning": {
        "text": "Warning",
        "icon": `<i class="fa-solid fa-triangle-exclamation"></i>`
    },
    "important": {
        "text": "Important",
        "icon": `<i class="fa-regular fa-lightbulb"></i>`
    }
}

const { meta } = Astro.props;
---

<BaseLayout>
    <div class="markdown">
        <h1 class="markdown__title">{meta.data.title}</h1>
        <div class="markdown__meta">
            <span class="meta__icon">
                <i class="fa-solid fa-calendar-days"></i>
            </span>
            <span>Written: </span>
            <span>{meta.data.date}</span>
            <span>|</span>
            <span>{meta.data.time}</span>
        </div>
        <p class="markdown__desc">
            {meta.data.description}
        </p>
        <slot />
    </div>
</BaseLayout>

<style is:global>
    .markdown {
        padding-bottom: var(--spacing-lg);
    }

    .markdown ul {
        padding-left: var(--spacing-md);
        margin-top: var(--spacing-xs);
        list-style-position: inside;
    }

    .markdown li {
        margin: var(--spacing-xs) 0;
    }

    .markdown li::marker {
        color: var(--color-accent);
    }

    .markdown details {
        margin-top: var(--spacing-xs);
        margin-bottom: var(--spacing-lg);
    }

    .markdown__title {
        margin-top: var(--spacing-lg);
        margin-bottom: var(--spacing-xs);
        font-size: var(--font-xl);
    }

    .markdown__meta {
        display: flex;
        align-items: center;
        gap: var(--spacing-xs);
        font-size: var(--font-md);
        margin-bottom: var(--spacing-lg);
    }

    .markdown__desc {
        margin-bottom: var(--spacing-lg);
    }

    .meta__icon {
        font-size: var(--font-lg);
    }

    .markdown p {
        margin: var(--spacing-md) 0;
    }

    .markdown h2 {
        font-size: var(--font-xl);
        margin-top: var(--spacing-xl);
        margin-bottom: var(--spacing-md);
    }

    .markdown h3 {
        font-size: var(--font-lg);
        margin-top: var(--spacing-md);
        margin-bottom: var(--spacing-md);
        font-style: italic;
    }

    .markdown pre {
        font-size: 0.9em;
        padding: var(--spacing-md);
        margin: var(--spacing-lg) 0;
        border-radius: 0.375em;
        border: 1px solid rgb(210, 208, 208);
    }

    .markdown pre code {
        font-size: 0.9em;
    }

    .markdown blockquote {
        border-top-right-radius: 0.375em;
        border-bottom-right-radius: 0.375rem;
        background-color: #60a5fa0d;
        border-inline-start: 3px solid #60a5fa;
        padding: var(--spacing-md);
        margin-bottom: var(--spacing-lg);
        margin-top: var(--spacing-lg);
    }

    .markdown blockquote.warning {
        border-inline-start: 3px solid #fb923c;
        background-color: #fb923c0d;
    }

    .markdown blockquote.important {
        border-inline-start: 3px solid #84cc16;
        background-color: #84cc160d;
    }

    .markdown blockquote p {
        display: flex;
        flex-direction: column;
        gap: var(--spacing-sm);
        margin: 0;
    }

    .markdown blockquote .quote__icon {
        color: #60a5fa;
        font-weight: 600;
        letter-spacing: 0.13em;
    }

    .markdown blockquote.warning .quote__icon {
        color: #fb923c;
    }

    .markdown blockquote.important .quote__icon {
        color: #84cc16;
    }

    .markdown p:has(img) {
        display: flex;
        justify-content: center;
        margin-bottom: var(--spacing-lg);
    }

    .markdown p img {
        max-width: 850px;
        height: auto;
        border-radius: 0.375em;
    }

    @media (max-width: 768px) {
        .markdown__meta {
            gap: var(--spacing-xxs);
        }

        .meta__icon {
            font-size: var(--font-md);
        }

        .markdown p img {
            max-width: 100%;
            width: auto;
            display: block;
            margin: 0 auto;
        }

        .markdown pre {
            padding: var(--spacing-sm);
            margin: var(--spacing-md) 0;
        }

        .markdown pre code {
            font-size: 0.85em;
        }

        .markdown ul {
            padding-left: 0;
        }
    }
</style>

<script define:vars={{notes}}>
    const blockquotes = document.querySelectorAll("blockquote p");
    blockquotes.forEach(blockquote => {
        const content = blockquote.textContent?.trim();
        const match = content?.match(/^\[(info|warning|important)\]\s*(.*)/);
        if (match){
            const type = match[1];
            const content = match[2];
            const note= notes[type];
            const iconSpan = document.createElement("span");
            blockquote?.parentElement?.classList?.add(type);
            iconSpan.classList.add("quote__icon");
            iconSpan.innerHTML = note.icon + " " + note.text;
            blockquote.textContent = content;
            blockquote.prepend(iconSpan);
            
        }
    });
</script>